# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2016-10-14 17:55
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


def forwards_func(apps, schema_editor):
    db_alias = schema_editor.connection.alias
    Cash = apps.get_model("accounting", "Cash")
    Expense = apps.get_model("accounting", "Expense")
    Income = apps.get_model("accounting", "Income")
    Invoice = apps.get_model("accounting", "Invoice")
    FullTime = apps.get_model("accounting", "FullTime")
    PartTime = apps.get_model("accounting", "PartTime")
    Payroll = apps.get_model("accounting", "Payroll")

    for obj in Cash.objects.using(db_alias).all():
        CashPH.objects.create(
            pk = obj.pk, 
            business_unit = obj.business_unit,
            predicted_amount = obj.predicted_amount,
            actual_amount = obj.actual_amount,
            reconciled = obj.reconciled,
            name = obj.name,
        )

    for obj in Expense.objects.using(db_alias).all():
        ExpensePH.objects.create(
            pk = obj.pk, 
            business_unit = obj.business_unit,
            predicted_amount = obj.predicted_amount,
            actual_amount = obj.actual_amount,
            reconciled = obj.reconciled,
            name = obj.name,
            date_payable = obj.date_payable,
            date_paid = obj.date_paid
        )

    for obj in Income.objects.using(db_alias).all():
        IncomePH.objects.create(
            pk = obj.pk, 
            business_unit = obj.business_unit,
            predicted_amount = obj.predicted_amount,
            actual_amount = obj.actual_amount,
            reconciled = obj.reconciled,
            name = obj.name,
            date_payable = obj.date_payable,
            date_paid = obj.date_paid
        )

    for obj in Invoice.objects.using(db_alias).all():
        InvoicePH.objects.create(
            pk = obj.pk, 
            contract = obj.contract,
            number = obj.number,
            transition_state = obj.transition_state,
            incomeph_ptr = obj.incomeph_ptr.pk,
        )

    for obj in FullTime.objects.using(db_alias).all():
        FullTimePH.objects.create(
            pk = obj.pk, 
            business_unit = obj.business_unit.pk,
            first_name = obj.first_name,
            last_name = obj.last_name,
            position = obj.position,
            salary_type = obj.salary_type,
            salary_amount = obj.salary_amount,
            social_security_amount = obj.social_security_amount,
            fed_health_insurance_amount = obj.fed_health_insurance_amount,
            retirement_amount = obj.retirement_amount,
            medical_insurance_amount = obj.medical_insurance_amount,
            staff_benefits_amount = obj.staff_benefits_amount,
            fringe_amount = obj.fringe_amount,
        )

    for obj in PartTime.objects.using(db_alias).all():
        PartTimePH.objects.create(
            pk = obj.pk,
            business_unit = obj.business_unit.pk,
            first_name = obj.first_name,
            last_name = obj.last_name,
            position = obj.position,
            hourly_type = obj.hourly_type,
            hourly_amount = obj.hourly_amount,
            hours_work = obj.hours_work,
        )

    for obj in Payroll.objects.using(db_alias).all():
        PayrollPH.objects.create(
            pk = obj.pk,
            expense = obj.expense.pk,
        )

class Migration(migrations.Migration):

    dependencies = [
        ('accounting', '0016_fy_update_placeholde_addition'),
    ]

    operations = [
        migrations.RunPython(forwards_func),
    ]